// webpack.config.dev.mjs
/*
SPDX-License-Identifier: CC-BY-4.0 OR GPL-3.0-or-later
This file is part of Network Engineering Pro
*/

import globalThisPolyfill from "globalthis"; // Use import instead of require
import path from "path";
import { merge } from "webpack-merge";
import common from "./webpack.common.mjs";

export default merge(common, {
  mode: "development",
  devtool: "inline-source-map",
  stats: "errors-only",
  infrastructureLogging: { level: "error" },
  devServer: {
    host: "localhost",
    port: 3000,
    hot: true,
    open: true,
    liveReload: true,
    client: { progress: true },
    watchFiles: ["./**/*"], // More efficient live reloading
  },
  output: {
    chunkFormat: "array-push",
    path: path.resolve(process.cwd(), "dist"),
    filename: "js/[name].bundle.js",
    chunkFilename: "js/[name].chunk.js",
    clean: true,
  },
  cache: {
    type: "filesystem",
    cacheDirectory: path.resolve(process.cwd(), ".webpack_cache"),
  },
  watchOptions: {
    ignored: /node_modules/,
    aggregateTimeout: 200,
    poll: 1000,
  },
  resolve: {
    fallback: {
      globalThis: globalThisPolyfill, // Use imported module
    },
  },
});
